@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject RoleManager<Role> RoleManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var loggedUser = await UserManager.FindByNameAsync(User.Identity.Name);

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                @loggedUser.FisrtName @loggedUser.LastName <i class="fa fa-user-circle"></i>
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <partial name="_AdminOptions" />
                <partial name="_EditorOptions" />
                <li><hr class="dropdown-divider"></li>
                <li class="nav-item">
                    <form class="form-inline dropdown-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <i class="fa fa-sign-out-alt"></i>
                        <button type="submit" class="btn text-dark p-0">Logout</button>
                    </form>
                </li>
            </ul>
        </li>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
